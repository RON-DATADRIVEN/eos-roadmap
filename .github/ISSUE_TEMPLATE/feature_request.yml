# Estructura propuesta del repositorio `eos-roadmap`
# ---------------------------------------------------
# Crea un repo p√∫blico llamado `eos-roadmap`. Habilita GitHub Pages desde
# Settings ‚Üí Pages ‚Üí "Deploy from a branch" ‚Üí Branch: main, Folder: /docs.
# Luego agrega los siguientes archivos y carpetas.

# ‚îú‚îÄ .github/
# ‚îÇ  ‚îú‚îÄ ISSUE_TEMPLATE/
# ‚îÇ  ‚îÇ  ‚îú‚îÄ feature_request.yml
# ‚îÇ  ‚îÇ  ‚îú‚îÄ bug_report.yml
# ‚îÇ  ‚îÇ  ‚îî‚îÄ change_request.yml
# ‚îÇ  ‚îú‚îÄ pull_request_template.md
# ‚îÇ  ‚îî‚îÄ CODEOWNERS
# ‚îú‚îÄ README.md
# ‚îú‚îÄ ROADMAP.md
# ‚îî‚îÄ docs/
#    ‚îú‚îÄ index.html
#    ‚îú‚îÄ modules.json
#    ‚îî‚îÄ style.css


# ---------------------------------------------------
# Archivo: .github/ISSUE_TEMPLATE/feature_request.yml
# ---------------------------------------------------
name: "‚ú® Feature / M√≥dulo"
description: "Solicitar una nueva funcionalidad o m√≥dulo de la plataforma"
title: "feat: <nombre-corto>"
labels: ["type:feature", "status:triage"]
body:
  - type: markdown
    attributes:
      value: |
        Gracias por tu propuesta. Por favor llena la informaci√≥n para priorizar y planificar.
  - type: input
    id: summary
    attributes:
      label: Resumen
      description: ¬øQu√© problema del usuario resuelve?
      placeholder: "M√≥dulo de Cat√°logo de Servicios con categor√≠as y tiempo de entrega"
    validations:
      required: true
  - type: textarea
    id: value
    attributes:
      label: Valor para el usuario/negocio
      description: Beneficio esperado y a qui√©n impacta.
    validations:
      required: true
  - type: textarea
    id: acceptance
    attributes:
      label: Criterios de aceptaci√≥n
      description: Define el comportamiento esperado (puedes usar Gherkin Given/When/Then).
      placeholder: |
        - Dado que soy Coordinador...
        - Cuando creo un servicio con categor√≠a, costo y tiempo de entrega...
        - Entonces puedo verlo en el cat√°logo p√∫blico...
    validations:
      required: true
  - type: dropdown
    id: priority
    attributes:
      label: Prioridad
      options:
        - P0 (cr√≠tica)
        - P1 (alta)
        - P2 (media)
        - P3 (baja)
    validations:
      required: true
  - type: input
    id: owner
    attributes:
      label: Due√±o (GitHub handle)
      placeholder: "@tu-usuario"
  - type: textarea
    id: dependencies
    attributes:
      label: Dependencias
      description: Issues/PRs/decisiones previas que condicionan esta entrega.
  - type: checkboxes
    id: dor
    attributes:
      label: Definition of Ready (DoR)
      options:
        - label: Problema y usuario objetivo claros
        - label: Scope acotado y criterio de aceptaci√≥n definido
        - label: Estimaci√≥n inicial acordada
        - label: Riesgos identificados (si aplica)


# ---------------------------------------------------
# Archivo: .github/ISSUE_TEMPLATE/bug_report.yml
# ---------------------------------------------------
name: "üêû Bug"
description: "Reportar un defecto"
title: "fix: <resumen>"
labels: ["type:bug", "status:triage"]
body:
  - type: input
    id: summary
    attributes:
      label: Resumen
      placeholder: "Error 500 al crear programa"
    validations:
      required: true
  - type: textarea
    id: steps
    attributes:
      label: Pasos para reproducir
      placeholder: "1. Ir a /programas ‚Üí 2. Click en crear ‚Üí 3. ..."
    validations:
      required: true
  - type: textarea
    id: expected
    attributes:
      label: Comportamiento esperado
    validations:
      required: true
  - type: textarea
    id: actual
    attributes:
      label: Comportamiento actual
    validations:
      required: true
  - type: textarea
    id: env
    attributes:
      label: Entorno
      placeholder: "Prod/Stg/Dev, navegador, versi√≥n"
  - type: textarea
    id: logs
    attributes:
      label: Logs/evidencia


# ---------------------------------------------------
# Archivo: .github/ISSUE_TEMPLATE/change_request.yml
# ---------------------------------------------------
name: "üìù Change Request (CCB)"
description: "Solicitar un cambio de alcance/alcance t√©cnico"
title: "chore: change-request <resumen>"
labels: ["type:change-request", "needs-approval"]
body:
  - type: markdown
    attributes:
      value: |
        Describe el cambio propuesto y el impacto (tiempo, costo, riesgo). Ser√° evaluado por el CCB.
  - type: textarea
    id: description
    attributes:
      label: Descripci√≥n del cambio
    validations:
      required: true
  - type: textarea
    id: impact
    attributes:
      label: Impacto (alcance/tiempo/costo/riesgo)
    validations:
      required: true
  - type: input
    id: requester
    attributes:
      label: Solicitante
      placeholder: "@stakeholder"
    validations:
      required: true


# ---------------------------------------------------
# Archivo: .github/pull_request_template.md
# ---------------------------------------------------
## Resumen
- _Qu√© resuelve este PR y por qu√©._

## Issues relacionados
- Closes #NNN

## Checklist DoD
- [ ] Pruebas locales OK
- [ ] Linter/Build CI verde
- [ ] Criterios de aceptaci√≥n cumplidos
- [ ] Documentaci√≥n/README actualizados si aplica
- [ ] Observabilidad (m√©tricas/logs) ajustada si aplica
- [ ] Seguridad revisada (secretos, permisos)

## Evidencia
- _Screenshots, GIFs o logs relevantes._


# ---------------------------------------------------
# Archivo: .github/CODEOWNERS
# ---------------------------------------------------
# Ajusta los due√±os a tus usuarios/teams reales.
* @tu-usuario
/docs/ @tu-usuario
/.github/ @tu-usuario


# ---------------------------------------------------
# Archivo: README.md
# ---------------------------------------------------
# EOS ‚Äì Roadmap p√∫blico

Repositorio para **planificaci√≥n visible** del proyecto EOS y su **p√°gina p√∫blica** (GitHub Pages) con m√≥dulos, estado y pr√≥ximos hitos.

## ¬øC√≥mo actualizar el roadmap visible?
1. Edita `docs/modules.json` (agrega/actualiza m√≥dulos, estado y progreso).
2. Commit a `main`. GitHub Pages publica autom√°ticamente.
3. Comparte el enlace con stakeholders.

## Plantillas
- Issues: Feature, Bug, Change Request.
- Pull Request template + CODEOWNERS.

## P√°gina p√∫blica
Habilita Pages (Settings ‚Üí Pages) con carpeta `/docs`. La home es `docs/index.html`.


# ---------------------------------------------------
# Archivo: ROADMAP.md
# ---------------------------------------------------
# Roadmap (alto nivel)

## √âpicas T1
1. **IAM** (invitaciones, login, roles/RBAC)
2. **Programas y Proyectos** (CRUD, estados, filtros)
3. **Red de Expertos** (perfil, skills, disponibilidad, matching b√°sico)
4. **Servicios Profesionales** (cat√°logo con categor√≠a [lista], costo, moneda, m√©todo de pago, tiempo de entrega, imagen, enlace de ejemplo)
5. **Dashboards por rol** (KPI, alertas de SLA)

## Hitos
- MVP t√©cnico (30 d√≠as): IAM + CRUD Programas/Proyectos + p√°gina p√∫blica operando
- 60 d√≠as: Cat√°logo de Servicios y Red de Expertos
- 90 d√≠as: Dashboards, SLAs, seguridad endurecida

> La vista detallada est√° en la **p√°gina p√∫blica** y en los issues etiquetados.


# ---------------------------------------------------
# Archivo: docs/modules.json
# ---------------------------------------------------
[
  {
    "id": "iam",
    "nombre": "Identidad y Acceso (IAM)",
    "descripcion": "Invitaciones por correo, login, perfiles, roles y permisos (RBAC).",
    "estado": "En curso",
    "porcentaje": 35,
    "propietario": "@tu-usuario",
    "inicio": "2025-08-15",
    "eta": "2025-09-10",
    "enlaces": [
      {"label": "Issue", "url": "https://github.com/<org>/eos-roadmap/issues/1"}
    ]
  },
  {
    "id": "programas",
    "nombre": "Programas y Proyectos",
    "descripcion": "CRUD de programas, cohortes y proyectos; estados y filtros por rol.",
    "estado": "Planificado",
    "porcentaje": 0,
    "propietario": "@tu-usuario",
    "inicio": "2025-09-01",
    "eta": "2025-09-30",
    "enlaces": []
  },
  {
    "id": "expertos",
    "nombre": "Red de Expertos",
    "descripcion": "Alta de expertos, skills, disponibilidad y matching b√°sico por categor√≠a/tema.",
    "estado": "Planificado",
    "porcentaje": 0,
    "propietario": "@tu-usuario",
    "inicio": "2025-09-15",
    "eta": "2025-10-10",
    "enlaces": []
  },
  {
    "id": "servicios",
    "nombre": "Servicios Profesionales",
    "descripcion": "Cat√°logo con categor√≠a (lista), costo, moneda, m√©todo de pago, tiempo de entrega, imagen y enlace de ejemplo.",
    "estado": "Planificado",
    "porcentaje": 0,
    "propietario": "@tu-usuario",
    "inicio": "2025-09-10",
    "eta": "2025-10-05",
    "enlaces": []
  },
  {
    "id": "dashboards",
    "nombre": "Dashboards por Rol",
    "descripcion": "KPIs y alertas por rol (coordinador, PM, experto, emprendedor).",
    "estado": "Planificado",
    "porcentaje": 0,
    "propietario": "@tu-usuario",
    "inicio": "2025-10-01",
    "eta": "2025-10-25",
    "enlaces": []
  }
]


# ---------------------------------------------------
# Archivo: docs/style.css
# ---------------------------------------------------
:root {
  --bg: #0f1115; --panel: #151821; --text: #e6e6e6; --muted: #a3a3a3;
  --blue: #4ea1ff; --green: #2ecc71; --yellow: #f1c40f; --red: #e74c3c;
  --card: #1b2030; --border: #273046;
}
* { box-sizing: border-box; }
body { margin: 0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto; background: var(--bg); color: var(--text); }
.header { padding: 24px; border-bottom: 1px solid var(--border); background: var(--panel); position: sticky; top: 0; z-index: 9; }
.header h1 { margin: 0 0 6px; font-size: 22px; }
.header p { margin: 0; color: var(--muted); font-size: 14px; }
.container { max-width: 1080px; margin: 0 auto; padding: 24px; }
.controls { display: flex; gap: 12px; margin-bottom: 16px; flex-wrap: wrap; }
select, input { background: var(--card); border: 1px solid var(--border); color: var(--text); padding: 8px 10px; border-radius: 8px; }
.grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 16px; }
.card { background: var(--card); border: 1px solid var(--border); border-radius: 14px; padding: 16px; display: flex; flex-direction: column; gap: 10px; }
.card h3 { margin: 0; font-size: 18px; }
.badge { display: inline-block; padding: 2px 8px; border-radius: 999px; font-size: 12px; border: 1px solid var(--border); }
.badge.planificado { background: #272c3f; color: var(--muted); }
.badge.encurso { background: #2a3a2f; color: var(--green); }
.badge.hecho { background: #283345; color: var(--blue); }
.desc { color: var(--muted); font-size: 14px; }
.meta { font-size: 12px; color: var(--muted); display: flex; gap: 14px; flex-wrap: wrap; }
.progress { height: 8px; background: #22283a; border-radius: 999px; overflow: hidden; border: 1px solid var(--border); }
.progress > div { height: 100%; background: var(--blue); width: 0%; transition: width .4s ease; }
.footer { color: var(--muted); font-size: 12px; margin-top: 24px; text-align: center; }
.link { color: var(--blue); text-decoration: none; }


# ---------------------------------------------------
# Archivo: docs/index.html
# ---------------------------------------------------
<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>EOS ‚Äì Roadmap p√∫blico</title>
  <meta name="description" content="Evoluci√≥n de m√≥dulos de la plataforma EOS (Go + Cassandra)" />
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="header">
    <div class="container">
      <h1>EOS ‚Äì Roadmap p√∫blico</h1>
      <p>Seguimiento de m√≥dulos y estado. Actualiza <code>modules.json</code> para publicar cambios.</p>
    </div>
  </div>

  <main class="container">
    <section class="controls">
      <select id="statusFilter" aria-label="Filtrar por estado">
        <option value="">Todos los estados</option>
        <option value="Planificado">Planificado</option>
        <option value="En curso">En curso</option>
        <option value="Hecho">Hecho</option>
      </select>
      <input id="search" type="search" placeholder="Buscar m√≥dulo..." />
    </section>

    <section id="grid" class="grid" aria-live="polite"></section>

    <div class="footer" id="footer"></div>
  </main>

  <script>
    const grid = document.getElementById('grid');
    const statusFilter = document.getElementById('statusFilter');
    const search = document.getElementById('search');
    const footer = document.getElementById('footer');

    let modules = [];

    async function load() {
      try {
        const res = await fetch('modules.json', { cache: 'no-store' });
        modules = await res.json();
        render();
      } catch (e) {
        grid.innerHTML = '<p>No se pudo cargar <code>modules.json</code>. Verifica GitHub Pages.</p>';
      }
      footer.textContent = `√öltima actualizaci√≥n: ${new Date().toLocaleString()}`;
    }

    function badgeClass(estado) {
      if (!estado) return 'badge';
      const key = estado.toLowerCase().replace(/\s+/g,'');
      return `badge ${key}`;
    }

    function render() {
      const term = search.value.trim().toLowerCase();
      const st = statusFilter.value;
      const filtered = modules.filter(m => {
        const matchStatus = !st || m.estado === st;
        const matchText = !term || (m.nombre + ' ' + (m.descripcion||'')).toLowerCase().includes(term);
        return matchStatus && matchText;
      });

      grid.innerHTML = filtered.map(m => `
        <article class="card">
          <h3>${m.nombre}</h3>
          <span class="${badgeClass(m.estado)}">${m.estado||''}</span>
          <p class="desc">${m.descripcion||''}</p>
          <div class="progress" title="${m.porcentaje||0}%">
            <div style="width:${Math.min(100, Math.max(0, m.porcentaje||0))}%"></div>
          </div>
          <div class="meta">
            <span>Propietario: ${m.propietario||'‚Äî'}</span>
            <span>Inicio: ${m.inicio||'‚Äî'}</span>
            <span>ETA: ${m.eta||'‚Äî'}</span>
            <span>Progreso: ${m.porcentaje||0}%</span>
          </div>
          ${Array.isArray(m.enlaces) && m.enlaces.length ? (`<div class="meta">` + m.enlaces.map(e => `<a class="link" href="${e.url}" target="_blank" rel="noopener">${e.label}</a>`).join(' ¬∑ ') + `</div>`) : ''}
        </article>
      `).join('');

      if (!filtered.length) {
        grid.innerHTML = '<p>No hay m√≥dulos con ese filtro/b√∫squeda.</p>';
      }
    }

    statusFilter.addEventListener('change', render);
    search.addEventListener('input', render);

    load();
  </script>
</body>
</html>
